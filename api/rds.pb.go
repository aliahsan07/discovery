// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rds.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ListRepositoriesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRepositoriesRequest) Reset()         { *m = ListRepositoriesRequest{} }
func (m *ListRepositoriesRequest) String() string { return proto.CompactTextString(m) }
func (*ListRepositoriesRequest) ProtoMessage()    {}
func (*ListRepositoriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eac9d3f8ca57de4, []int{0}
}
func (m *ListRepositoriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRepositoriesRequest.Unmarshal(m, b)
}
func (m *ListRepositoriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRepositoriesRequest.Marshal(b, m, deterministic)
}
func (m *ListRepositoriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRepositoriesRequest.Merge(m, src)
}
func (m *ListRepositoriesRequest) XXX_Size() int {
	return xxx_messageInfo_ListRepositoriesRequest.Size(m)
}
func (m *ListRepositoriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRepositoriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRepositoriesRequest proto.InternalMessageInfo

type ListRepositoriesResponse struct {
	Repositories         []string `protobuf:"bytes,1,rep,name=repositories,proto3" json:"repositories,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRepositoriesResponse) Reset()         { *m = ListRepositoriesResponse{} }
func (m *ListRepositoriesResponse) String() string { return proto.CompactTextString(m) }
func (*ListRepositoriesResponse) ProtoMessage()    {}
func (*ListRepositoriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eac9d3f8ca57de4, []int{1}
}
func (m *ListRepositoriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRepositoriesResponse.Unmarshal(m, b)
}
func (m *ListRepositoriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRepositoriesResponse.Marshal(b, m, deterministic)
}
func (m *ListRepositoriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRepositoriesResponse.Merge(m, src)
}
func (m *ListRepositoriesResponse) XXX_Size() int {
	return xxx_messageInfo_ListRepositoriesResponse.Size(m)
}
func (m *ListRepositoriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRepositoriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRepositoriesResponse proto.InternalMessageInfo

func (m *ListRepositoriesResponse) GetRepositories() []string {
	if m != nil {
		return m.Repositories
	}
	return nil
}

func init() {
	proto.RegisterType((*ListRepositoriesRequest)(nil), "cloud.deps.discovery.api.ListRepositoriesRequest")
	proto.RegisterType((*ListRepositoriesResponse)(nil), "cloud.deps.discovery.api.ListRepositoriesResponse")
}

func init() { proto.RegisterFile("rds.proto", fileDescriptor_6eac9d3f8ca57de4) }

var fileDescriptor_6eac9d3f8ca57de4 = []byte{
	// 267 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x31, 0x4e, 0xf3, 0x40,
	0x10, 0x85, 0xe5, 0x3f, 0xbf, 0x10, 0x59, 0x51, 0xa0, 0xa5, 0xc0, 0xa4, 0x42, 0xae, 0x90, 0x10,
	0xbb, 0x4a, 0xe8, 0x29, 0xa2, 0x94, 0x14, 0x91, 0xe9, 0xd2, 0xa0, 0x8d, 0x3d, 0x72, 0x46, 0x0a,
	0x9e, 0x61, 0x67, 0x1c, 0xe4, 0x96, 0x86, 0x03, 0x70, 0x00, 0x0e, 0xc5, 0x15, 0x38, 0x08, 0x0a,
	0x18, 0x14, 0x84, 0x5c, 0xd0, 0xed, 0xbe, 0xd1, 0x9b, 0x79, 0xef, 0x33, 0xc3, 0x58, 0x8a, 0xe3,
	0x48, 0x4a, 0x36, 0x2d, 0xd6, 0xd4, 0x94, 0xae, 0x04, 0x16, 0x57, 0xa2, 0x14, 0xb4, 0x81, 0xd8,
	0xba, 0xc0, 0x38, 0x5a, 0x54, 0xa8, 0xab, 0x66, 0xe9, 0x0a, 0xba, 0xf3, 0x55, 0xe4, 0xe2, 0x02,
	0x0a, 0x92, 0x56, 0x14, 0xba, 0x6f, 0x15, 0x14, 0x1e, 0x42, 0xeb, 0x75, 0x85, 0xb1, 0xbc, 0xe5,
	0x10, 0xb5, 0xf5, 0x15, 0x51, 0xb5, 0x86, 0xc0, 0x28, 0xdd, 0xd3, 0x07, 0x46, 0x1f, 0xea, 0x9a,
	0x34, 0x28, 0x52, 0xdd, 0x5d, 0xcd, 0x4e, 0xcc, 0xf1, 0x35, 0x8a, 0xe6, 0xc0, 0x24, 0xa8, 0x14,
	0x11, 0x24, 0x87, 0xfb, 0x06, 0x44, 0xb3, 0x2b, 0x93, 0xfe, 0x1e, 0x09, 0x53, 0x2d, 0x60, 0x33,
	0x73, 0x10, 0x77, 0xf4, 0x34, 0x39, 0x1d, 0x9c, 0x0d, 0xf3, 0x1f, 0xda, 0xe4, 0x25, 0x31, 0x47,
	0xdf, 0xe6, 0x76, 0xf6, 0x55, 0xc9, 0x3e, 0x25, 0xe6, 0xff, 0x76, 0xb1, 0x1d, 0xbb, 0xbe, 0xca,
	0xae, 0x27, 0xd3, 0x68, 0xf2, 0x17, 0xcb, 0x67, 0xd6, 0x2c, 0x7d, 0x7c, 0x7d, 0x7b, 0xfe, 0x67,
	0xed, 0xa1, 0xdf, 0x8c, 0xfd, 0x6e, 0xc2, 0xe9, 0xb9, 0xe9, 0x85, 0x3e, 0xdd, 0xcf, 0x67, 0x37,
	0xf3, 0x2d, 0xa2, 0x79, 0xb2, 0x18, 0x04, 0xc6, 0xe5, 0xde, 0x07, 0xb0, 0xcb, 0xf7, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x22, 0x20, 0x92, 0x25, 0xb3, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RepositoryDiscoveryClient is the client API for RepositoryDiscovery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RepositoryDiscoveryClient interface {
	List(ctx context.Context, in *ListRepositoriesRequest, opts ...grpc.CallOption) (*ListRepositoriesResponse, error)
}

type repositoryDiscoveryClient struct {
	cc *grpc.ClientConn
}

func NewRepositoryDiscoveryClient(cc *grpc.ClientConn) RepositoryDiscoveryClient {
	return &repositoryDiscoveryClient{cc}
}

func (c *repositoryDiscoveryClient) List(ctx context.Context, in *ListRepositoriesRequest, opts ...grpc.CallOption) (*ListRepositoriesResponse, error) {
	out := new(ListRepositoriesResponse)
	err := c.cc.Invoke(ctx, "/cloud.deps.discovery.api.RepositoryDiscovery/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RepositoryDiscoveryServer is the server API for RepositoryDiscovery service.
type RepositoryDiscoveryServer interface {
	List(context.Context, *ListRepositoriesRequest) (*ListRepositoriesResponse, error)
}

// UnimplementedRepositoryDiscoveryServer can be embedded to have forward compatible implementations.
type UnimplementedRepositoryDiscoveryServer struct {
}

func (*UnimplementedRepositoryDiscoveryServer) List(ctx context.Context, req *ListRepositoriesRequest) (*ListRepositoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterRepositoryDiscoveryServer(s *grpc.Server, srv RepositoryDiscoveryServer) {
	s.RegisterService(&_RepositoryDiscovery_serviceDesc, srv)
}

func _RepositoryDiscovery_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRepositoriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryDiscoveryServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.deps.discovery.api.RepositoryDiscovery/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryDiscoveryServer).List(ctx, req.(*ListRepositoriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RepositoryDiscovery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cloud.deps.discovery.api.RepositoryDiscovery",
	HandlerType: (*RepositoryDiscoveryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _RepositoryDiscovery_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rds.proto",
}
